{"version":3,"sources":["useFetchJob.js","Job.js","JobPagination.js","SearchForm.js","App.js","serviceWorker.js","index.js"],"names":["ACTION","BASE_URL","reducer","state","action","type","jobs","loading","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","Axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","err","isCancel","cancelToken2","length","e","cancel","useFetchJob","Container","param","target","prevParams","map","key","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.128ef0ed.chunk.js","sourcesContent":["import {useReducer, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst ACTION = {\r\n    MAKE_REQUEST: 'make-request',\r\n    GET_DATA: 'get-data',\r\n    ERROR: 'error',\r\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n}\r\n\r\nconst BASE_URL = `https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json`\r\n\r\nfunction reducer(state, action){\r\n    switch(action.type){\r\n        case ACTION.MAKE_REQUEST :\r\n           return {jobs: [], loading : true}\r\n        case ACTION.GET_DATA : \r\n            return {...state, loading : false, jobs: action.payload.jobs}\r\n        case ACTION.ERROR : \r\n            return {...state, loading : false, error: action.payload.error, jobs: []}\r\n        case ACTION.UPDATE_HAS_NEXT_PAGE : \r\n            return {...state, hasNextPage : action.payload.hasNextPage}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default function useFetch(params,page){\r\n\r\n    const [state, dispatch] = useReducer(reducer, {jobs: [], loading : true}) \r\n\r\n    useEffect(()=>{\r\n        const cancelToken1 = Axios.CancelToken.source()\r\n        dispatch({type : ACTION.MAKE_REQUEST})\r\n        Axios.get(BASE_URL, {\r\n            cancelToken: cancelToken1.token,\r\n            params: {markdown: true, page: page, ...params}\r\n        }).then(res => {\r\n            dispatch({type: ACTION.GET_DATA, payload: {jobs: res.data}})\r\n        }).catch(err => {\r\n            if(Axios.isCancel(err)) return \r\n            dispatch({type: ACTION.ERROR, payload: {error: err}})\r\n        })\r\n\r\n        const cancelToken2 = Axios.CancelToken.source()\r\n        Axios.get(BASE_URL, {\r\n            cancelToken: cancelToken2.token,\r\n            params: { markdown: true, page: page + 1, ...params }\r\n        }).then(res => {\r\n            dispatch({ type: ACTION.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } }) \r\n        }).catch(e => {\r\n            if (Axios.isCancel(e)) return\r\n            dispatch({ type: ACTION.ERROR, payload: { error: e } }) \r\n        })\r\n\r\n        return()=>{\r\n            cancelToken1.cancel()\r\n            cancelToken2.cancel()\r\n        }\r\n    }, [params,page])\r\n\r\n    return state\r\n}\r\n\r\n\r\n            ","import React, {useState} from 'react';\r\nimport {Card, Badge, Button, Collapse} from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nexport default function Job({job}) {\r\n    const [open, setOpen] = useState(false)\r\n    return (\r\n        <Card className='mb-3'>\r\n            <Card.Body>\r\n                <div className='d-flex justify-content-between'>\r\n                    <div>\r\n                        <Card.Title>\r\n                            {job.title} - <span className='text-muted font-weight-light'>{job.company}</span>\r\n                        </Card.Title>\r\n                        <Card.Subtitle className='text-muted mb-2'>\r\n                            {new Date(job.created_at).toLocaleDateString()}\r\n                        </Card.Subtitle>\r\n                        <Badge variant='secondary' className='mr-2'>{job.type}</Badge>\r\n                        <Badge variant='secondary'>{job.location}</Badge>\r\n                        <div style={{ wordBreak:'break-all' }}>\r\n                            <ReactMarkdown source={job.how_to_apply}/>\r\n                        </div>\r\n                    </div>\r\n                    <img className='d-sm-none d-md-block' height='50' alt={job.company} source={job.company_logo}/>\r\n                </div>\r\n                <Card.Text>\r\n                    <Button \r\n                    onClick={()=> setOpen(prevOpen => !prevOpen) } \r\n                    variant='primary'\r\n                    >\r\n                        {open ? 'Hide Details' : 'View Details'}\r\n                    </Button>\r\n                </Card.Text>\r\n                <Collapse in={open}>\r\n                    <div className='mt-4'>\r\n                        <ReactMarkdown source={job.description}/>\r\n                    </div>\r\n                </Collapse>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Pagination} from 'react-bootstrap';\r\n\r\nfunction JobPagination({page, setPage, hasNextPage}) {\r\n\r\n    function adjustPage(amount){\r\n        setPage(prevPage => prevPage + amount)\r\n    }\r\n\r\n    return (\r\n        <Pagination>\r\n            {page !== 1 && <Pagination.Prev onClick={()=> adjustPage(-1)}/>}\r\n            {page !== 1 && <Pagination.Item onClick={()=> setPage(1)}>1</Pagination.Item>}\r\n            {page >2 && <Pagination.Ellipsis/>}\r\n            {page >2 && <Pagination.Item onClick={()=> adjustPage(-1)}>{page -1}</Pagination.Item>}\r\n            <Pagination.Item active>{page}</Pagination.Item>\r\n            {hasNextPage && <Pagination.Item onClick={()=> adjustPage(1)}>{page +1}</Pagination.Item>}\r\n            {hasNextPage && <Pagination.Next onClick={()=> adjustPage(1)}/>}\r\n        </Pagination>\r\n    );\r\n}\r\n\r\nexport default JobPagination;","import React from 'react';\r\nimport {Form, Col} from 'react-bootstrap';\r\n\r\nexport default function SearchForm({params, onParamChange}) {\r\n    return (\r\n        <Form className='mb-4'>\r\n            <Form.Row className='align-items-end'>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control onChange={onParamChange} value={params.description} name='description' type='text'></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control onChange={onParamChange} value={params.location} name='location' type='text'></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Col} xs='auto' className='ml-2'>\r\n                    <Form.Check \r\n                        onChange={onParamChange} \r\n                        value={params.full_time} \r\n                        name=\"full_time\" id='full-time' \r\n                        label='Only full time' \r\n                        type='checkbox'\r\n                        className='mb-2'\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </Form>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\nimport useFetchJob from './useFetchJob';\nimport {Container} from 'react-bootstrap';\nimport Job from './Job';\nimport JobPagination from './JobPagination';\nimport SearchForm from './SearchForm';\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const { jobs , loading , error, hasNextPage} = useFetchJob(params, page);\n\n  function handleParamChange(e){\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1);\n    setParams(prevParams=>{\n      return{ ...prevParams, [param]: value}\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <Container className='my-4'>\n        <h1 className='mb-4'>Find a Job</h1>\n        <SearchForm params={params} onParamChange={handleParamChange} />\n        <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n        {loading && <h1>loading...</h1>}\n        {error && <h1>error. try refreshing</h1>}\n        {jobs.map(job => {\n          return <Job key={job.id} job={job} hasNextPage={hasNextPage}/>\n        })}\n        <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}